{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "kpwDataFactory"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"Sftp1_passPhrase": {
			"type": "secureString",
			"metadata": "Secure string for 'passPhrase' of 'Sftp1'"
		},
		"AzureBatchPOC_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://azuzebatchservicepoc2.eastus.batch.azure.com"
		},
		"AzureBatchPOC_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "pool_fixed_ip_mi"
		},
		"AzureBatchPOC_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "azuzebatchservicepoc2"
		},
		"AzureBatchUbuntu_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://batcheus2unbuntu.eastus2.batch.azure.com"
		},
		"AzureBatchUbuntu_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "id2"
		},
		"AzureBatchUbuntu_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "batcheus2unbuntu"
		},
		"AzureBlobBatch_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "batchStorageAccountCONN"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kpwkeyvault.vault.azure.net/"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "10.0.0.4"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().sftpUser}"
		},
		"archive_blob_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://kpwstorageaccount.blob.core.windows.net/"
		},
		"export_blob_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://kpwstorageaccount.blob.core.windows.net/"
		},
		"logs_blob_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://kpwstorageaccount.blob.core.windows.net/"
		},
		"newFileInArchived_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/6fd627f3-9600-4a99-84df-ac54922ac175/resourceGroups/POC-data-pipeline/providers/Microsoft.Storage/storageAccounts/kpwstorageaccount"
		},
		"default_properties_SQLServerKeyVaultSecretName_value": {
			"type": "string",
			"defaultValue": "AzureSqlDBSecret"
		},
		"default_properties_SQLServerFQDN_value": {
			"type": "string",
			"defaultValue": "kpwdb.database.windows.net"
		},
		"default_properties_SQLServerDBName_value": {
			"type": "string",
			"defaultValue": "datafactory"
		},
		"default_properties_SQLServerUsername_value": {
			"type": "string",
			"defaultValue": "kpwadmin"
		},
		"default_properties_DockerUsernameKVName_value": {
			"type": "string",
			"defaultValue": "docker-username"
		},
		"default_properties_DockerHostKVName_value": {
			"type": "string",
			"defaultValue": "docker-host"
		},
		"default_properties_DockerPasswordKVName_value": {
			"type": "string",
			"defaultValue": "docker-password"
		},
		"default_properties_SFTPUsernameKVName_value": {
			"type": "string",
			"defaultValue": "sftp-username"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataPipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "sFTP to Archived blob and to SQL",
				"activities": [
					{
						"name": "sFTPToBlobArchived",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "sFTPToBlobArchived",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ImportAzureBlobToSQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "sFTPToBlobArchived",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ImportAzureBlobToSQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/sFTPToBlobArchived')]",
				"[concat(variables('factoryId'), '/pipelines/ImportAzureBlobToSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExportFromSQLToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExportFromSQLToBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLUsersTable",
								"type": "DatasetReference",
								"parameters": {
									"Secret": {
										"value": "@pipeline().globalParameters.SQLServerKeyVaultSecretName",
										"type": "Expression"
									},
									"SQLServerFQDN": {
										"value": "@pipeline().globalParameters.SQLServerFQDN",
										"type": "Expression"
									},
									"DBName": {
										"value": "@pipeline().globalParameters.SQLServerDBName",
										"type": "Expression"
									},
									"Username": {
										"value": "@pipeline().globalParameters.SQLServerUsername",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ExportedDataCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLUsersTable')]",
				"[concat(variables('factoryId'), '/datasets/ExportedDataCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportAzureBlobToSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ImportFromBlobToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIRSTNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LASTNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GENDER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ip_address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IP",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureBlobArchived",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQLUsersTable",
								"type": "DatasetReference",
								"parameters": {
									"Secret": {
										"value": "@pipeline().globalParameters.SQLServerKeyVaultSecretName",
										"type": "Expression"
									},
									"SQLServerFQDN": {
										"value": "@pipeline().globalParameters.SQLServerFQDN",
										"type": "Expression"
									},
									"DBName": {
										"value": "@pipeline().globalParameters.SQLServerDBName",
										"type": "Expression"
									},
									"Username": {
										"value": "@pipeline().globalParameters.SQLServerUsername",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlobArchived')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQLUsersTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RunBatch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "testPipeline",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "GetDockerUser",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetDockerHost",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetDockerPassword",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "@concat('/bin/bash -c \"docker login ', activity('GetDockerHost').output.value, ' --username ', activity('GetDockerUser').output.value , ' --password ', activity('GetDockerPassword').output.value, ' && docker run -v $(pwd)/activity.json:/activity.json azurebatchpoc.azurecr.io/securebatch:latest\"')",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "AzureBlobBatch",
								"type": "LinkedServiceReference"
							},
							"folderPath": "input",
							"referenceObjects": {
								"linkedServices": [
									{
										"referenceName": "export_blob",
										"type": "LinkedServiceReference",
										"parameters": {}
									},
									{
										"referenceName": "archive_blob",
										"type": "LinkedServiceReference",
										"parameters": {}
									}
								],
								"datasets": [
									{
										"referenceName": "AzureBlobArchived",
										"type": "DatasetReference",
										"parameters": {}
									}
								]
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatchPOC",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetDockerUser",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://kpwkeyvault.vault.azure.net/secrets/', pipeline().globalParameters.DockerUsernameKVName, '?api-version=2016-10-01')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"linkedServices": [
								{
									"referenceName": "AzureKeyVault",
									"type": "LinkedServiceReference"
								}
							],
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetDockerHost",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://kpwkeyvault.vault.azure.net/secrets/', pipeline().globalParameters.DockerHostKVName, '?api-version=2016-10-01')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetDockerPassword",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://kpwkeyvault.vault.azure.net/secrets/', pipeline().globalParameters.DockerPasswordKVName,'?api-version=2016-10-01')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T14:14:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/export_blob')]",
				"[concat(variables('factoryId'), '/linkedServices/archive_blob')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobArchived')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobBatch')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBatchPOC')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RunBatchFailed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "testPipeline",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "GetDockerUser",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetDockerHost",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetDockerPassword",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "@concat('/bin/bash -c \"docker login ', activity('GetDockerHost').output.value, ' --username ', activity('GetDockerUser').output.value , ' --password ', activity('GetDockerPassword').output.value, ' && docker run -v $(pwd)/activity.json:/activity.json -e EXIT=1 azurebatchpoc.azurecr.io/pocbatch:latest\"')",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "AzureBlobBatch",
								"type": "LinkedServiceReference"
							},
							"folderPath": "input",
							"referenceObjects": {
								"linkedServices": [
									{
										"referenceName": "export_blob",
										"type": "LinkedServiceReference",
										"parameters": {}
									},
									{
										"referenceName": "archive_blob",
										"type": "LinkedServiceReference",
										"parameters": {}
									}
								],
								"datasets": [
									{
										"referenceName": "AzureBlobArchived",
										"type": "DatasetReference",
										"parameters": {}
									}
								]
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatchPOC",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetDockerUser",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://kpwkeyvault.vault.azure.net/secrets/', pipeline().globalParameters.DockerUsernameKVName, '?api-version=2016-10-01')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"linkedServices": [
								{
									"referenceName": "AzureKeyVault",
									"type": "LinkedServiceReference"
								}
							],
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetDockerHost",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://kpwkeyvault.vault.azure.net/secrets/', pipeline().globalParameters.DockerHostKVName, '?api-version=2016-10-01')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetDockerPassword",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://kpwkeyvault.vault.azure.net/secrets/', pipeline().globalParameters.DockerPasswordKVName,'?api-version=2016-10-01')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T14:14:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/export_blob')]",
				"[concat(variables('factoryId'), '/linkedServices/archive_blob')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobArchived')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobBatch')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBatchPOC')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sFTPToBlobArchived')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data Pipeline 1 read from sFTP server and backup it into Azure Blob Storage (archived)",
				"activities": [
					{
						"name": "CopySFTPToBlob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetSFTPUsername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sFTPRawDataCSV",
								"type": "DatasetReference",
								"parameters": {
									"sftpUser": {
										"value": "@activity('GetSFTPUsername').output.value",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureBlobArchived",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetSFTPUsername",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://kpwkeyvault.vault.azure.net/secrets/', pipeline().globalParameters.SFTPUsernameKVName, '?api-version=2016-10-01')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-06T08:30:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sFTPRawDataCSV')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobArchived')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobArchived')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "archive_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "archived",
						"container": "testdatastorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/archive_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLUsersTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference",
					"parameters": {
						"KeyVaultSecretName": {
							"value": "@dataset().Secret",
							"type": "Expression"
						},
						"FQDN": {
							"value": "@dataset().SQLServerFQDN",
							"type": "Expression"
						},
						"DBName": {
							"value": "@dataset().DBName",
							"type": "Expression"
						},
						"Username": {
							"value": "@dataset().Username",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Secret": {
						"type": "string",
						"defaultValue": "AzureSqlDBSecret"
					},
					"SQLServerFQDN": {
						"type": "string",
						"defaultValue": "kpwdb.database.windows.net"
					},
					"DBName": {
						"type": "string"
					},
					"Username": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FIRSTNAME",
						"type": "varchar"
					},
					{
						"name": "LASTNAME",
						"type": "varchar"
					},
					{
						"name": "EMAIL",
						"type": "varchar"
					},
					{
						"name": "GENDER",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Users"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExportedDataCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "export_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('users_', formatDateTime(convertTimeZone(utcNow(), 'UTC', 'Eastern Standard Time'), 'yyyy-MM-ddTHHmmss'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "exported",
						"container": "dataexport"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/export_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sFTPRawDataCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp1",
					"type": "LinkedServiceReference",
					"parameters": {
						"sftpUser": {
							"value": "@dataset().sftpUser",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"sftpUser": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/home/azureuser/data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatchPOC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "east asia azure batch",
				"annotations": [
					"east-asia"
				],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('AzureBatchPOC_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatchPOC_properties_typeProperties_poolName')]",
					"accountName": "[parameters('AzureBatchPOC_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobBatch",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobBatch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatchUbuntu')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('AzureBatchUbuntu_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatchUbuntu_properties_typeProperties_poolName')]",
					"accountName": "[parameters('AzureBatchUbuntu_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobBatch",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "azureBatchUbuntu"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobBatch')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobBatch')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureBlobBatch_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"KeyVaultSecretName": {
						"type": "string",
						"defaultValue": "AzureSqlDBSecret"
					},
					"FQDN": {
						"type": "string",
						"defaultValue": "kpwdb.database.windows.net"
					},
					"DBName": {
						"type": "string",
						"defaultValue": "datafactory"
					},
					"Username": {
						"type": "string",
						"defaultValue": "kpwadmin"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().KeyVaultSecretName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"sftpUser": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "SshPublicKey",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"privateKeyContent": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "sftp-privatekey"
					},
					"passPhrase": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_passPhrase')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/archive_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('archive_blob_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/export_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('export_blob_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/logs_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('logs_blob_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/newFileInArchived')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ImportAzureBlobToSQL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/testdatastorage/blobs/archived/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('newFileInArchived_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ImportAzureBlobToSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"SQLServerKeyVaultSecretName": {
					"type": "string",
					"value": "[parameters('default_properties_SQLServerKeyVaultSecretName_value')]"
				},
				"SQLServerFQDN": {
					"type": "string",
					"value": "[parameters('default_properties_SQLServerFQDN_value')]"
				},
				"SQLServerDBName": {
					"type": "string",
					"value": "[parameters('default_properties_SQLServerDBName_value')]"
				},
				"SQLServerUsername": {
					"type": "string",
					"value": "[parameters('default_properties_SQLServerUsername_value')]"
				},
				"DockerUsernameKVName": {
					"type": "string",
					"value": "[parameters('default_properties_DockerUsernameKVName_value')]"
				},
				"DockerHostKVName": {
					"type": "string",
					"value": "[parameters('default_properties_DockerHostKVName_value')]"
				},
				"DockerPasswordKVName": {
					"type": "string",
					"value": "[parameters('default_properties_DockerPasswordKVName_value')]"
				},
				"SFTPUsernameKVName": {
					"type": "string",
					"value": "[parameters('default_properties_SFTPUsernameKVName_value')]"
				}
			},
			"dependsOn": []
		}
	]
}